#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define FILENAME "employees.dat"

typedef struct { 
    int id;
    char name[100];
    float salary;
} Employee;

void addEmployee();
void viewEmployees();
void searchEmployee();
void deleteEmployee();

int main() {
    int choice;
    while (1) {
        printf("\nEmployee Management System\n");
        printf("1. Add Employee\n");
        printf("2. View Employees\n");
        printf("3. Search Employee\n");
        printf("4. Delete Employee\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        getchar(); // to consume newline character

        switch (choice) {
            case 1:
                addEmployee();
                break;
            case 2:
                viewEmployees();
                break;
            case 3:
                searchEmployee();
                break;
            case 4:
                deleteEmployee();
                break;
            case 5:
                exit(0);
                break;
            default:
                printf("Invalid choice! Please try again.\n");
        }
    }
    return 0;
}

void addEmployee() {
    FILE *file = fopen(FILENAME, "ab");
    if (!file) {
        printf("Unable to open file!\n");
        return;
    }

    Employee emp;
    printf("Enter employee ID: ");
    scanf("%d", &emp.id);
    getchar(); // to consume newline character
    printf("Enter employee name: ");
    fgets(emp.name, sizeof(emp.name), stdin);
    strtok(emp.name, "\n"); // remove newline character
    printf("Enter employee salary: ");
    scanf("%f", &emp.salary);

    fwrite(&emp, sizeof(Employee), 1, file);
    fclose(file);

    printf("Employee added successfully!\n");
}

void viewEmployees() {
    FILE *file = fopen(FILENAME, "rb");
    if (!file) {
        printf("Unable to open file!\n");
        return;
    }

    Employee emp;
    printf("\nEmployees in the system:\n");
    while (fread(&emp, sizeof(Employee), 1, file)) {
        printf("ID: %d, Name: %s, Salary: %.2f\n", emp.id, emp.name, emp.salary);
    }
    fclose(file);
}

void searchEmployee() {
    FILE *file = fopen(FILENAME, "rb");
    if (!file) {
        printf("Unable to open file!\n");
        return;
    }

    int id;
    printf("Enter employee ID to search: ");
    scanf("%d", &id);

    Employee emp;
    int found = 0;
    while (fread(&emp, sizeof(Employee), 1, file)) {
        if (emp.id == id) {
            printf("Employee found! ID: %d, Name: %s, Salary: %.2f\n", emp.id, emp.name, emp.salary);
            found = 1;
            break;
        }
    }
    fclose(file);

    if (!found) {
        printf("Employee not found!\n");
    }
}

void deleteEmployee() {
    FILE *file = fopen(FILENAME, "rb");
    if (!file) {
        printf("Unable to open file!\n");
        return;
    }

    int id;
    printf("Enter employee ID to delete: ");
    scanf("%d", &id);

    FILE *tempFile = fopen("temp.dat", "wb");
    if (!tempFile) {
        printf("Unable to open temporary file!\n");
        fclose(file);
        return;
    }

    Employee emp;
    int found = 0;
    while (fread(&emp, sizeof(Employee), 1, file)) {
        if (emp.id != id) {
            fwrite(&emp, sizeof(Employee), 1, tempFile);
        } else {
            found = 1;
        }
    }
    fclose(file);
    fclose(tempFile);

    remove(FILENAME);
    rename("temp.dat", FILENAME);

    if (found) {
        printf("Employee deleted successfully!\n");
    } else {
        printf("Employee not found!\n");
    }
}
